option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: "mailp.wsgi:application"
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: static
  aws:elasticbeanstalk:application:environment:
    DJANGO_SETTINGS_MODULE: "mailp.settings"
    PYTHONPATH: "/var/app/current:$PYTHONPATH"



files:
    "/etc/cron.hourly/cron.logcleanup.elasticbeanstalk.healthd.nginx.conf":
        mode: "000755"
        owner: root
        group: root
        content: |
            "#!/bin/sh"
            find /var/log/containers/nginx-proxy/healthd -type f | grep -v application.log.`date -u +"%Y-%m-%d-%H"` | xargs rm -f
    "/home/ec2-user/setup-healthd-appstat.sh":
        mode: "000755"
        owner: root
        group: root
        content: |
            "#!/bin/sh"
            set -e
            mkdir -p /var/log/containers/nginx-proxy/healthd
            chmod 777 /var/log/containers/nginx-proxy/healthd
            if [ -d "/etc/healthd" ]
            then
                echo "appstat_log_path: /var/log/containers/nginx-proxy/healthd/application.log" >> /etc/healthd/config.yaml
                echo "appstat_unit: sec" >> /etc/healthd/config.yaml
                echo "appstat_timestamp_on: completion" >> /etc/healthd/config.yaml
                initctl start healthd || initctl restart healthd
            fi

container_commands:
    01-healthd-configure:
        command: /home/ec2-user/setup-healthd-appstat.sh 


packages:
  yum:
    git: []
    libjpeg-turbo-devel: []
    amazon-linux-extras: []

commands:
    01_postgres_activate:
        command: sudo amazon-linux-extras enable postgresql10
    02_postgres_install:
        command: sudo yum install -y postgresql-devel








files:
  "/opt/elasticbeanstalk/support/conf/sidekiq.conf":
    mode: "000755"
    content: |
      description "Elastic Beanstalk Sidekiq Upstart Manager"
      start on runlevel [2345]
      stop on runlevel [06]
      # explained above
      respawn
      respawn limit 3 30
      script
      # scripts run in /bin/sh by default
      # respawn as bash so we can source in rbenv
      exec /bin/bash <<"EOT"
        EB_SCRIPT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k script_dir)
        EB_SUPPORT_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k support_dir)
        . $EB_SUPPORT_DIR/envvars
        . $EB_SCRIPT_DIR/use-app-ruby.sh
        EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)
        EB_APP_PID_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_pid_dir)
        cd $EB_APP_DEPLOY_DIR
        su -s /bin/bash -c "bundle exec sidekiq -e production -L ${EB_APP_DEPLOY_DIR}/log/sidekiq.log -C ${EB_APP_DEPLOY_DIR}/config/sidekiq.yml -P ${EB_APP_PID_DIR}/sidekiq.pid"
      EOT
      end script


files:
  "/opt/elasticbeanstalk/hooks/appdeploy/pre/03_mute_sidekiq.sh":
    mode: "000755"
    content: |
      #!/bin/bash
      . /opt/elasticbeanstalk/support/envvars
      PIDFILE=/var/app/containerfiles/pids/sidekiq.pid
      if [ -f ${PIDFILE} ]
      then
        kill -USR1 `cat ${PIDFILE}`
        rm -rf /var/app/containerfiles/pids/sidekiq.pid
      fi
  "/opt/elasticbeanstalk/hooks/appdeploy/post/50_restart_sidekiq.sh":
    mode: "000755"
    content: |
      #!/bin/bash
      initctl restart sidekiq || initctl start sidekiq
  "/opt/elasticbeanstalk/hooks/configdeploy/pre/03_mute_sidekiq.sh":
    mode: "000755"
    content: |
      #!/bin/bash
      . /opt/elasticbeanstalk/support/envvars
      PIDFILE=/var/app/containerfiles/pids/sidekiq.pid
      if [ -f ${PIDFILE} ]
      then
        kill -USR1 `cat ${PIDFILE}`
        rm -rf /var/app/containerfiles/pids/sidekiq.pid
      fi
  "/opt/elasticbeanstalk/hooks/configdeploy/post/50_restart_sidekiq.sh":
    mode: "000755"
    content: |
      #!/bin/bash
      initctl restart sidekiq || initctl start sidekiq
  "/opt/elasticbeanstalk/hooks/restartappserver/pre/03_mute_sidekiq.sh":
    mode: "000755"
    content: |
      #!/bin/bash
      . /opt/elasticbeanstalk/support/envvars
      PIDFILE=/var/app/containerfiles/pids/sidekiq.pid
      if [ -f ${PIDFILE} ]
      then
        kill -USR1 `cat ${PIDFILE}`
        rm -rf /var/app/containerfiles/pids/sidekiq.pid
      fi
  "/opt/elasticbeanstalk/hooks/restartappserver/post/50_restart_sidekiq.sh":
    mode: "000755"
    content: |
      #!/bin/bash
      initctl restart sidekiq || initctl start sidekiq


files:
  "/etc/init/sidekiq.conf":
    mode: "120400"
    content: "/opt/elasticbeanstalk/support/conf/sidekiq.conf"

commands:
  reload_initctl_for_sidekiq:
    command: "initctl reload-configuration"

 